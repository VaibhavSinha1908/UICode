{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Udemy Courses and Tutorials\\\\ReactJS\\\\base-syntax--03-finished\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: '12sd',\n        name: 'Max',\n        age: 28\n      }, {\n        id: '213w12',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'dsf323',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    _this.switchNameHandler = function (newName) {\n      // console.log('Was clicked!');\n      // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n      _this.setState({\n        persons: [{\n          name: newName,\n          age: 28\n        }, {\n          name: 'Manu',\n          age: 29\n        }, {\n          name: 'Stephanie',\n          age: 27\n        }]\n      });\n    };\n\n    _this.togglePersonHandler = function () {\n      var doesShow = _this.state.showPersons;\n\n      _this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    _this.nameChangedHandler = function (event, id) {\n      var personIndex = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      });\n\n      var person = _toConsumableArray(_this.state.person[personIndex]); //create a copy of the person object using the spread operator\n\n\n      person.name = event.target.value;\n\n      var persons = _toConsumableArray(_this.state.persons); //create a copy of persons array using the spread operator.\n\n\n      persons[personIndex] = person;\n\n      _this.setState({\n        persons: persons\n      }); //setting the original version of persons with newer version of persons object.\n\n    };\n\n    _this.deleteEventHandler = function (personIndex) {\n      //const persons = this.state.persons;// not a good way as we get a pointer to the original persons object. Accidently changing this could lead to unstable apps.\n      // const persons = this.state.persons.slice(); //old javascript way to copy the array to a new brand new array.\n      var persons = _toConsumableArray(_this.state.persons); //Latest Es6 way to spread an array into it's elements and copy it in the new array, 'persons'\n\n\n      persons.splice(personIndex, 1);\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //everything under render method gets executed everytime react updates the DOM.\n      var style = {\n        backgroundColor: 'green',\n        color: 'white',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer'\n      };\n      var persons = null;\n\n      if (this.state.showPersons) {\n        persons = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, this.state.persons.map(function (person, index) {\n          //Dynamic List Syntax\n          return React.createElement(Person, {\n            key: person.id,\n            name: person.name,\n            age: person.age,\n            changed: function changed(event) {\n              return _this2.nameChangedHandler(event, person.id);\n            },\n            click: function click() {\n              return _this2.deleteEventHandler(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          });\n        }));\n        style.backgroundColor = 'red';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"This is really working!\"), React.createElement(\"button\", {\n        style: style,\n        onClick: this.togglePersonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Toggle Persons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\Udemy Courses and Tutorials\\ReactJS\\base-syntax--03-finished\\src\\App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","switchNameHandler","newName","setState","togglePersonHandler","doesShow","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","deleteEventHandler","splice","style","backgroundColor","color","font","border","padding","cursor","map","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,KAApB;AAA2BC,QAAAA,GAAG,EAAE;AAAhC,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAG,QAAP;AAAiBC,QAAAA,IAAI,EAAE,MAAvB;AAA+BC,QAAAA,GAAG,EAAE;AAApC,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAG,QAAP;AAAiBC,QAAAA,IAAI,EAAE,WAAvB;AAAoCC,QAAAA,GAAG,EAAE;AAAzC,OAHO,CADH;AAMNC,MAAAA,UAAU,EAAE,kBANN;AAONC,MAAAA,WAAW,EAAE;AAPP,K;;UAURC,iB,GAAoB,UAACC,OAAD,EAAa;AAC/B;AACA;AACA,YAAKC,QAAL,CAAe;AACbR,QAAAA,OAAO,EAAE,CACP;AAAEE,UAAAA,IAAI,EAAEK,OAAR;AAAiBJ,UAAAA,GAAG,EAAE;AAAtB,SADO,EAEP;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,GAAG,EAAE;AAArB,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,GAAG,EAAE;AAA1B,SAHO;AADI,OAAf;AAOD,K;;UAEDM,mB,GAAsB,YAAM;AAC1B,UAAMC,QAAQ,GAAG,MAAKX,KAAL,CAAWM,WAA5B;;AACA,YAAKG,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE,CAACK;AAAf,OAAd;AACD,K;;UAEDC,kB,GAAqB,UAACC,KAAD,EAAQX,EAAR,EAAe;AAElC,UAAMY,WAAW,GAAG,MAAKd,KAAL,CAAWC,OAAX,CAAmBc,SAAnB,CAA6B,UAAAC,CAAC,EAAE;AAClD,eAAOA,CAAC,CAACd,EAAF,KAAOA,EAAd;AACD,OAFmB,CAApB;;AAIA,UAAMe,MAAM,sBAAO,MAAKjB,KAAL,CAAWiB,MAAX,CAAkBH,WAAlB,CAAP,CAAZ,CANkC,CAMkB;;;AACpDG,MAAAA,MAAM,CAACd,IAAP,GAAcU,KAAK,CAACK,MAAN,CAAaC,KAA3B;;AAEA,UAAMlB,OAAO,sBAAO,MAAKD,KAAL,CAAWC,OAAlB,CAAb,CATkC,CASS;;;AAE3CA,MAAAA,OAAO,CAACa,WAAD,CAAP,GAAuBG,MAAvB;;AAGA,YAAKR,QAAL,CAAc;AAACR,QAAAA,OAAO,EAACA;AAAT,OAAd,EAdkC,CAcA;;AACnC,K;;UAEDmB,kB,GAAmB,UAACN,WAAD,EAAiB;AAClC;AACA;AACC,UAAMb,OAAO,sBAAO,MAAKD,KAAL,CAAWC,OAAlB,CAAb,CAHiC,CAGQ;;;AAC1CA,MAAAA,OAAO,CAACoB,MAAR,CAAeP,WAAf,EAA4B,CAA5B;;AACA,YAAKL,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEA;AAAV,OAAd;AAED,K;;;;;;;6BAES;AAAA;;AAAM;AACd,UAAMqB,KAAK,GAAG;AACZC,QAAAA,eAAe,EAAE,OADL;AAEZC,QAAAA,KAAK,EAAE,OAFK;AAGZC,QAAAA,IAAI,EAAE,SAHM;AAIZC,QAAAA,MAAM,EAAE,gBAJI;AAKZC,QAAAA,OAAO,EAAE,KALG;AAMZC,QAAAA,MAAM,EAAE;AANI,OAAd;AASA,UAAI3B,OAAO,GAAE,IAAb;;AAEA,UAAG,KAAKD,KAAL,CAAWM,WAAd,EAA0B;AACxBL,QAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,KAAKD,KAAL,CAAWC,OAAX,CAAmB4B,GAAnB,CAAuB,UAACZ,MAAD,EAASa,KAAT,EAAoB;AAAI;AAC5C,iBACE,oBAAC,MAAD;AACQ,YAAA,GAAG,EAAEb,MAAM,CAACf,EADpB;AAEQ,YAAA,IAAI,EAAEe,MAAM,CAACd,IAFrB;AAGQ,YAAA,GAAG,EAAGc,MAAM,CAACb,GAHrB;AAIQ,YAAA,OAAO,EAAG,iBAACS,KAAD;AAAA,qBAAW,MAAI,CAACD,kBAAL,CAAwBC,KAAxB,EAA+BI,MAAM,CAACf,EAAtC,CAAX;AAAA,aAJlB;AAKQ,YAAA,KAAK,EAAE;AAAA,qBAAI,MAAI,CAACkB,kBAAL,CAAwBU,KAAxB,CAAJ;AAAA,aALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQH,SATA,CADD,CADF;AAcAR,QAAAA,KAAK,CAACC,eAAN,GAAsB,KAAtB;AACC;;AAIH,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,EAGE;AACE,QAAA,KAAK,EAAED,KADT;AAEE,QAAA,OAAO,EAAE,KAAKZ,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAMKT,OANL,CADF,CAhCQ,CA6CR;AACD;;;;EApGeJ,S;;AAuGlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: '12sd', name: 'Max', age: 28 },\n      { id : '213w12', name: 'Manu', age: 29 },\n      { id : 'dsf323', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  }\n\n  switchNameHandler = (newName) => {\n    // console.log('Was clicked!');\n    // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n    this.setState( {\n      persons: [\n        { name: newName, age: 28 },\n        { name: 'Manu', age: 29 },\n        { name: 'Stephanie', age: 27 }\n      ]\n    } )\n  }\n\n  togglePersonHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  nameChangedHandler = (event, id) => {\n\n    const personIndex = this.state.persons.findIndex(p=>{\n      return p.id===id;\n    });\n\n    const person = [...this.state.person[personIndex]]; //create a copy of the person object using the spread operator\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];   //create a copy of persons array using the spread operator.\n\n    persons[personIndex] = person;\n\n\n    this.setState({persons:persons}); //setting the original version of persons with newer version of persons object.\n  }\n\n  deleteEventHandler=(personIndex) => {\n    //const persons = this.state.persons;// not a good way as we get a pointer to the original persons object. Accidently changing this could lead to unstable apps.\n    // const persons = this.state.persons.slice(); //old javascript way to copy the array to a new brand new array.\n     const persons = [...this.state.persons]; //Latest Es6 way to spread an array into it's elements and copy it in the new array, 'persons'\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons}); \n\n  }\n\n  render () {     //everything under render method gets executed everytime react updates the DOM.\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    let persons =null;\n\n    if(this.state.showPersons){\n      persons =  (\n        <div>     \n        {this.state.persons.map((person, index ) => {   //Dynamic List Syntax\n            return (\n              <Person \n                      key={person.id} \n                      name={person.name} \n                      age ={person.age} \n                      changed ={(event) => this.nameChangedHandler(event, person.id)}\n                      click={()=>this.deleteEventHandler(index)} />\n            );\n        })}\n        </div>\n      );        \n      style.backgroundColor='red';\n      }\n    \n\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working!</p>\n        <button \n          style={style}\n          onClick={this.togglePersonHandler}>Toggle Persons</button>\n          {persons}\n       \n        \n       </div> \n      \n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}